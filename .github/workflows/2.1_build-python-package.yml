name: Build Python Package

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        type: string
      publish:
        description: 'Whether to publish the package (true/false)'
        required: false
        default: 'false'
        type: string
      upload-github-release:
        description: 'Whether to upload the built package to a GitHub Release (true/false)'
        required: false
        default: 'false'
        type: string
    outputs:
      version:
        description: 'Extracted version from pyproject.toml'
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UV_SYSTEM_PYTHON: 1
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/get-version
        id: get_version
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml
            uv.lock
      - name: Build package
        run: uv build
      - name: Publish package to PyPI
        if: ${{ inputs.publish == 'true' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv pip install twine
          twine upload dist/*
      - name: Upload Python package to GitHub Release
        if: ${{ inputs.upload-github-release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
